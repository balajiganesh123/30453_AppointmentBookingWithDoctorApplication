{"ast":null,"code":"import { ActivatedRoute } from '@angular/router';\nimport { FormBuilder } from '@angular/forms';\nimport { ApiService } from '../services/api.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/api.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction DoctorProfileComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"form\", 6);\n    i0.ɵɵelement(6, \"input\", 7)(7, \"input\", 8);\n    i0.ɵɵelementStart(8, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function DoctorProfileComponent_div_12_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const s_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.book(s_r1));\n    });\n    i0.ɵɵtext(9, \"Book\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const s_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(3, 3, s_r1.startUtc, \"short\"), \" to \", i0.ɵɵpipeBind2(4, 6, s_r1.endUtc, \"short\"), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.fgs[s_r1.startUtc]);\n  }\n}\nexport let DoctorProfileComponent = /*#__PURE__*/(() => {\n  class DoctorProfileComponent {\n    constructor(route, api, fb) {\n      this.route = route;\n      this.api = api;\n      this.fb = fb;\n      this.id = 0;\n      this.date = '';\n      this.slots = [];\n      this.book = this.fb.group({\n        reason: [''],\n        notes: ['']\n      });\n    }\n    ngOnInit() {\n      this.id = Number(this.route.snapshot.paramMap.get('id'));\n      this.api.getDoctor(this.id).subscribe(d => this.doctor = d);\n    }\n    loadSlots() {\n      if (!this.date) return;\n      this.api.slots(this.id, this.date).subscribe(s => this.slots = s);\n    }\n    choose(s) {\n      const user = JSON.parse(localStorage.getItem('user') || '{}');\n      const body = {\n        doctorId: this.id,\n        patientId: user.userId,\n        startUtc: s.startUtc,\n        reason: this.book.value.reason,\n        notes: this.book.value.notes\n      };\n      this.api.createAppointment(body).subscribe(() => this.loadSlots());\n    }\n  }\n  DoctorProfileComponent.ɵfac = function DoctorProfileComponent_Factory(t) {\n    return new (t || DoctorProfileComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  DoctorProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DoctorProfileComponent,\n    selectors: [[\"app-doctor-profile\"]],\n    decls: 13,\n    vars: 8,\n    consts: [[1, \"card\"], [1, \"filters\"], [\"type\", \"date\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [1, \"grid\"], [\"class\", \"card\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"formGroup\"], [\"placeholder\", \"Reason\", \"formControlName\", \"reason\"], [\"placeholder\", \"Notes\", \"formControlName\", \"notes\"], [\"type\", \"button\", 3, \"click\"]],\n    template: function DoctorProfileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 1)(8, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function DoctorProfileComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.date = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function DoctorProfileComponent_Template_button_click_9_listener() {\n          return ctx.findSlots();\n        });\n        i0.ɵɵtext(10, \"Find Slots\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 4);\n        i0.ɵɵtemplate(12, DoctorProfileComponent_div_12_Template, 10, 9, \"div\", 5);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.doctor == null ? null : ctx.doctor.user == null ? null : ctx.doctor.user.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\"\", ctx.doctor == null ? null : ctx.doctor.specialization, \" \\u2022 \", ctx.doctor == null ? null : ctx.doctor.experienceYears, \" years\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\"\", ctx.doctor == null ? null : ctx.doctor.city, \" \\u2022 \", ctx.doctor == null ? null : ctx.doctor.clinicLocation, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.date);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.slots)(\"ngForTrackBy\", ctx.trackSlot);\n      }\n    },\n    dependencies: [i4.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.FormGroupDirective, i3.FormControlName, i4.DatePipe],\n    encapsulation: 2\n  });\n  return DoctorProfileComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}