{"ast":null,"code":"import { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../services/api.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/api.service\";\nimport * as i3 from \"@angular/common\";\nfunction PatientDashboardComponent_div_11_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function PatientDashboardComponent_div_11_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const a_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.cancel(a_r1.id));\n    });\n    i0.ɵɵtext(1, \"Cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientDashboardComponent_div_11_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function PatientDashboardComponent_div_11_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const a_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.remove(a_r1.id));\n    });\n    i0.ɵɵtext(1, \"Remove\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientDashboardComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, PatientDashboardComponent_div_11_button_8_Template, 2, 0, \"button\", 6);\n    i0.ɵɵtemplate(9, PatientDashboardComponent_div_11_button_9_Template, 2, 0, \"button\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const a_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Doctor \", a_r1.doctor.user.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 5, a_r1.startTime, \"short\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Status \", a_r1.status, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", a_r1.status === \"PENDING\" || a_r1.status === \"CONFIRMED\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", a_r1.status === \"CANCELLED\" || a_r1.status === \"COMPLETED\" || a_r1.status === \"NO_SHOW\");\n  }\n}\nexport let PatientDashboardComponent = /*#__PURE__*/(() => {\n  class PatientDashboardComponent {\n    constructor(route, api, router) {\n      this.route = route;\n      this.api = api;\n      this.router = router;\n      this.id = 0;\n      this.appts = [];\n      this.showAll = false;\n    }\n    ngOnInit() {\n      this.id = Number(this.route.snapshot.paramMap.get('id'));\n      this.patient = JSON.parse(localStorage.getItem('user') || '{}');\n      this.refresh();\n    }\n    refresh() {\n      this.api.patientAppointments(this.id).subscribe(d => this.appts = d);\n    }\n    visibleAppts() {\n      if (this.showAll) return this.appts;\n      const now = Date.now();\n      return this.appts.filter(a => (a.status === 'PENDING' || a.status === 'CONFIRMED') && new Date(a.startTime).getTime() >= now);\n    }\n    cancel(id) {\n      this.api.cancelAppointment(id).subscribe(() => this.refresh());\n    }\n    remove(id) {\n      this.api.deleteAppointment(id, this.patient.userId).subscribe(() => this.refresh());\n    }\n    logout() {\n      localStorage.removeItem('user');\n      this.router.navigate(['/']);\n    }\n  }\n  PatientDashboardComponent.ɵfac = function PatientDashboardComponent_Factory(t) {\n    return new (t || PatientDashboardComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n  PatientDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PatientDashboardComponent,\n    selectors: [[\"app-patient-dashboard\"]],\n    decls: 12,\n    vars: 7,\n    consts: [[2, \"margin-bottom\", \"8px\"], [2, \"margin-bottom\", \"16px\"], [2, \"display\", \"flex\", \"align-items\", \"center\", \"gap\", \"8px\", \"margin-bottom\", \"16px\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline\", \"btn-sm\", 3, \"click\"], [\"class\", \"card\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\"], [3, \"click\", 4, \"ngIf\"], [3, \"click\"]],\n    template: function PatientDashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Patient Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 1);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 2)(7, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function PatientDashboardComponent_Template_button_click_7_listener() {\n          return ctx.showAll = false;\n        });\n        i0.ɵɵtext(8, \"Show upcoming\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function PatientDashboardComponent_Template_button_click_9_listener() {\n          return ctx.showAll = true;\n        });\n        i0.ɵɵtext(10, \"Show all\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(11, PatientDashboardComponent_div_11_Template, 10, 8, \"div\", 4);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Patient name: \", ctx.patient == null ? null : ctx.patient.name, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Email: \", ctx.patient == null ? null : ctx.patient.email, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"btn-primary\", !ctx.showAll);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"btn-primary\", ctx.showAll);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.visibleAppts());\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i3.DatePipe],\n    encapsulation: 2\n  });\n  return PatientDashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}