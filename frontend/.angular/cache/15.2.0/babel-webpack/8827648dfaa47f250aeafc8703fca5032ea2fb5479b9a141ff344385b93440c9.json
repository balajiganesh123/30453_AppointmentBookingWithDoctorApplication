{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../services/api.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/api.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, api, router) {\n      this.fb = fb;\n      this.api = api;\n      this.router = router;\n      this.f = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', Validators.required]\n      });\n      this.error = '';\n    }\n    submit() {\n      if (this.f.invalid) return;\n      this.api.login(this.f.value).subscribe({\n        next: res => {\n          localStorage.setItem('user', JSON.stringify(res));\n          if (res.role === 'DOCTOR') this.router.navigate(['/doctor', res.userId]);else this.router.navigate(['/patient', res.userId]);\n        },\n        error: () => this.error = 'Invalid credentials'\n      });\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 11,\n    vars: 3,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [2, \"margin-bottom\", \"12px\"], [\"formControlName\", \"email\", \"type\", \"email\", \"placeholder\", \"Email\", \"autocomplete\", \"email\", 2, \"padding\", \"10px 12px\", \"font-size\", \"14px\", \"width\", \"280px\"], [\"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\", \"autocomplete\", \"current-password\", 2, \"padding\", \"10px 12px\", \"font-size\", \"14px\", \"width\", \"280px\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [4, \"ngIf\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\");\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵelementStart(8, \"button\", 4);\n        i0.ɵɵtext(9, \" Log in \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, LoginComponent_div_10_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.f);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", ctx.f.invalid || ctx.f.pending);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    encapsulation: 2\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}