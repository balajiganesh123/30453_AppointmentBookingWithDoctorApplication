{"ast":null,"code":"import { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ApiService } from '../services/api.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/api.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction DoctorDashboardComponent_div_6_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function DoctorDashboardComponent_div_6_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const a_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.accept(a_r3));\n    });\n    i0.ɵɵtext(1, \"Accept\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DoctorDashboardComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, DoctorDashboardComponent_div_6_button_7_Template, 2, 0, \"button\", 8);\n    i0.ɵɵelementStart(8, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function DoctorDashboardComponent_div_6_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const a_r3 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.status(a_r3, \"CHECKED_IN\"));\n    });\n    i0.ɵɵtext(9, \"Checked In\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function DoctorDashboardComponent_div_6_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const a_r3 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.status(a_r3, \"IN_PROGRESS\"));\n    });\n    i0.ɵɵtext(11, \"In Progress\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function DoctorDashboardComponent_div_6_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const a_r3 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.status(a_r3, \"COMPLETED\"));\n    });\n    i0.ɵɵtext(13, \"Completed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function DoctorDashboardComponent_div_6_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const a_r3 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.status(a_r3, \"NO_SHOW\"));\n    });\n    i0.ɵɵtext(15, \"No Show\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const a_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Patient \", a_r3.patient.user.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(a_r3.startTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(a_r3.status);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", a_r3.status === \"PENDING\");\n  }\n}\nfunction DoctorDashboardComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.success);\n  }\n}\nfunction DoctorDashboardComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.error);\n  }\n}\nexport let DoctorDashboardComponent = /*#__PURE__*/(() => {\n  class DoctorDashboardComponent {\n    constructor(route, api, fb) {\n      this.route = route;\n      this.api = api;\n      this.fb = fb;\n      this.id = 0;\n      this.today = [];\n      this.success = '';\n      this.error = '';\n      this.loading = false;\n      this.f = this.fb.group({\n        date: ['', Validators.required],\n        start: ['', Validators.required],\n        end: ['', Validators.required]\n      });\n    }\n    ngOnInit() {\n      this.id = Number(this.route.snapshot.paramMap.get('id'));\n      this.api.getDoctor(this.id).subscribe(d => this.doctor = d);\n      this.refresh();\n    }\n    refresh() {\n      this.api.doctorToday(this.id).subscribe(d => this.today = d);\n    }\n    addSchedule() {\n      if (this.f.invalid) return;\n      this.success = '';\n      this.error = '';\n      this.loading = true;\n      const body = {\n        date: this.f.value.date,\n        start: this.f.value.start,\n        end: this.f.value.end,\n        slotMinutes: 15\n      };\n      this.api.addSchedule(this.id, body).subscribe({\n        next: () => {\n          this.success = 'Slot added successfully';\n          this.loading = false;\n          this.refresh();\n        },\n        error: () => {\n          this.error = 'Failed to add slot';\n          this.loading = false;\n        }\n      });\n    }\n    accept(a) {\n      this.api.acceptAppointment(a.id).subscribe(() => this.refresh());\n    }\n    status(a, s) {\n      this.api.updateStatus(a.id, s).subscribe(() => this.refresh());\n    }\n  }\n  DoctorDashboardComponent.ɵfac = function DoctorDashboardComponent_Factory(t) {\n    return new (t || DoctorDashboardComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  DoctorDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DoctorDashboardComponent,\n    selectors: [[\"app-doctor-dashboard\"]],\n    decls: 17,\n    vars: 6,\n    consts: [[\"class\", \"card\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"card\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"date\", \"formControlName\", \"date\"], [\"type\", \"time\", \"formControlName\", \"start\"], [\"type\", \"time\", \"formControlName\", \"end\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"card\"], [3, \"click\", 4, \"ngIf\"], [3, \"click\"]],\n    template: function DoctorDashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Doctor Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"h3\");\n        i0.ɵɵtext(5, \"Today\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, DoctorDashboardComponent_div_6_Template, 16, 4, \"div\", 0);\n        i0.ɵɵelementStart(7, \"h3\");\n        i0.ɵɵtext(8, \"Add Availability\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, DoctorDashboardComponent_div_9_Template, 2, 1, \"div\", 1);\n        i0.ɵɵtemplate(10, DoctorDashboardComponent_div_10_Template, 2, 1, \"div\", 1);\n        i0.ɵɵelementStart(11, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function DoctorDashboardComponent_Template_form_ngSubmit_11_listener() {\n          return ctx.addSchedule();\n        });\n        i0.ɵɵelement(12, \"input\", 3)(13, \"input\", 4)(14, \"input\", 5);\n        i0.ɵɵelementStart(15, \"button\", 6);\n        i0.ɵɵtext(16, \"Add\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"doctor name: \", ctx.doctor == null ? null : ctx.doctor.user == null ? null : ctx.doctor.user.name, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.today);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.success);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.f);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    encapsulation: 2\n  });\n  return DoctorDashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}